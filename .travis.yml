language: cpp
sudo: required
matrix:
  include:
    - os: linux
      dist: trusty
      compiler: gcc
      python: "3.5"

addons:
  apt:
    sources:
    # add PPAs with more up-to-date toolchains
    - ubuntu-toolchain-r-test
    #- llvm-toolchain-trusty-5.0
    packages:
    - gcc-7
    - g++-7
    #- clang-5.0
    #- llvm-5.0-dev
    #- libclang-5.0-dev
    - mesa-common-dev
    - libsdl2-dev
    - libsdl2-image-dev
    - libsdl2-ttf-dev
    - libfreetype6-dev
    - libopenal-dev
    - libasound2-dev
    - zlib1g-dev
    - libboost-dev
    - libboost-system-dev
    - libboost-filesystem-dev
    - libboost-test-dev
    - libtinyxml-dev
    - libc6
    - libglew-dev

before_install:
  - "sudo apt-get update"
  - "export DISPLAY=:99.0"
  - "/sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -ac -screen 0 1280x1024x16"
  - sleep 3 # give xvfb some time to start
  # Linux Build
  # change gcc to version 7
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 20; sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-7 20; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo update-alternatives --config gcc; sudo update-alternatives --config g++; fi
  # change clang to version 5.0
  #- if [ $TRAVIS_OS_NAME == linux ]; then sudo update-alternatives --install /usr/bin/clang clang /usr/bin/clang-5.0 20; sudo update-alternatives --install /usr/bin/clang++ clang++ /usr/bin/clang++-5.0 20; fi
  #- if [ $TRAVIS_OS_NAME == linux ]; then sudo rm -f /usr/local/clang-3.9.0/bin/clang; sudo rm -f /usr/local/clang-3.9.0/bin/clang++; sudo update-alternatives --config clang; sudo update-alternatives --config clang++; fi
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo apt-get -qq update && sudo apt-get install -y libgle3-dev libvorbis-dev libalut-dev cppcheck; fi
  # update swig to version 3.x
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo sh -c 'echo "deb http://archive.ubuntu.com/ubuntu trusty-backports main restricted universe multiverse" >> /etc/apt/sources.list'; sudo apt-get update -qq; sudo apt-get install -yqq swig3.0/trusty-backports; fi
  # install newer version of pylint, the one fetched with apt-get is broken
  - if [ $TRAVIS_OS_NAME == linux ]; then sudo pip install pylint; fi
  # MacOS Build
  - if [ $TRAVIS_OS_NAME == osx ]; then HOMEBREW_NO_AUTO_UPDATE=1 brew install boost swig sdl2 sdl2_image sdl2_ttf freetype openal-soft tinyxml glew libvorbis python3 python || brew upgrade boost swig sdl2 sdl2_image sdl2_ttf freetype openal-soft tinyxml glew libvorbis python3 python || brew outdated boost swig sdl2 sdl2_image sdl2_ttf freetype openal-soft tinyxml glew libvorbis  python3 python; fi
  - cmake --version

install:
  - "sudo apt-get install python3-enet
  - "pip3 install -r requirements.txt"
  - git clone --quiet --depth 1 git://github.com/fifengine/fifechan.git
  - if [ $TRAVIS_OS_NAME == linux ]; then mkdir build_fifechan; cd build_fifechan; cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr ../fifechan; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then mkdir build_fifechan; cd build_fifechan; cmake ../fifechan; fi
  - make -j3
  - sudo make install
  - cd ..
  - dir
  - git clone --quiet --depth 1 git://github.com/fifengine/fifengine.git
  - if [ $TRAVIS_OS_NAME == linux ]; then mkdir build; cd build; cmake -DPYTHON_EXECUTABLE=/usr/bin/python3 -DCMAKE_INSTALL_PREFIX:PATH=/usr -Dcegui=OFF ../fifengine; fi
  - if [ $TRAVIS_OS_NAME == osx ]; then mkdir build; cd build; cmake -Dbuild-library=ON -DPYTHON_EXECUTABLE=/usr/local/bin/python3 -Dcegui=OFF ../fifengine; fi
  - ls -alh .
  - make -j3
  - sudo make install
  - cd ..

script:
  - "cp -a /usr/lib/python3/dist-packages/enet* $VIRTUAL_ENV/lib/python3.5/site-packages/"
  - "cp -a /usr/lib/python3/dist-packages/future/ /usr/lib/python3/dist-packages/past/ /usr/lib/python3/dist-packages/libfuturize/ /usr/lib/python3/dist-packages/libpasteurize/ $VIRTUAL_ENV/lib/python3.5/site-packages/"
  - "prename 's/\\.cpython-35m-x86_64-linux-gnu/.cpython-35m/' $VIRTUAL_ENV/lib/python3.5/site-packages/enet*.so"
  - python3 -c 'from fife import fife; print(fife.getVersion())'
  - isort -c -rc horizons tests *.py
  - pycodestyle horizons tests *.py development
  - COVERAGE_FILE=.coverage.nongui pytest --verbose --cov --cov-report= -rs
  - RUNCOV=1 pytest --gui-tests tests/gui --verbose --cov --cov-report= -rs

after_success:
  - coverage combine
  - coveralls

notifications:
  email: false
  irc:
    channels:
      - "chat.freenode.net#unknown-horizons"
      - "chat.freenode.net#unknown-horizons-de"
    skip_join: false
    use_notice: false
